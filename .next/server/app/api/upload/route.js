(()=>{var e={};e.id=413,e.ids=[413],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},9021:e=>{"use strict";e.exports=require("fs")},3873:e=>{"use strict";e.exports=require("path")},3978:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>y,routeModule:()=>m,serverHooks:()=>j,workAsyncStorage:()=>w,workUnitAsyncStorage:()=>h});var s={};r.r(s),r.d(s,{GET:()=>f,POST:()=>x});var a=r(2706),o=r(8203),i=r(5994),n=r(9187),u=r(9021),p=r(3873),l=r.n(p);let d=l().join(process.cwd(),"public","uploads");async function c(){try{await u.promises.access(d)}catch{await u.promises.mkdir(d,{recursive:!0})}}async function x(e){try{let t=(await e.formData()).get("file");if(!t)return n.NextResponse.json({error:"No file uploaded"},{status:400});if(!t.name.endsWith(".txt")&&"text/plain"!==t.type)return n.NextResponse.json({error:"Only .txt files are allowed"},{status:400});if(t.size>1048576)return n.NextResponse.json({error:"File size too large. Maximum 1MB allowed."},{status:400});await c();let r=await t.text(),s=l().join(d,"upload.txt"),a=!1;try{await u.promises.access(s),a=!0}catch{a=!1}await u.promises.writeFile(s,r,"utf-8");let o=a?"File upload.txt has been successfully replaced":"File upload.txt has been successfully uploaded";return n.NextResponse.json({message:o,url:"/uploads/upload.txt",publicId:"upload",filename:"upload",fileSize:t.size,replaced:a,content:r.substring(0,100)+(r.length>100?"...":"")})}catch(e){return console.error("Upload error:",e),n.NextResponse.json({error:"Failed to upload file"},{status:500})}}async function f(){try{await c();let e=l().join(d,"upload.txt");try{let t=await u.promises.stat(e),r=await u.promises.readFile(e,"utf-8");return n.NextResponse.json({exists:!0,name:"upload.txt",size:t.size,lastModified:t.mtime,url:"/uploads/upload.txt",preview:r.substring(0,100)+(r.length>100?"...":"")})}catch{return n.NextResponse.json({exists:!1,message:"File upload.txt does not exist yet"})}}catch(e){return console.error("Error checking file:",e),n.NextResponse.json({error:"Failed to check file"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/upload/route",pathname:"/api/upload",filename:"route",bundlePath:"app/api/upload/route"},resolvedPagePath:"D:\\Kerja\\freelance\\work\\hidden website\\woordenlijst\\src\\app\\api\\upload\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:w,workUnitAsyncStorage:h,serverHooks:j}=m;function y(){return(0,i.patchFetch)({workAsyncStorage:w,workUnitAsyncStorage:h})}},6487:()=>{},8335:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[638,452],()=>r(3978));module.exports=s})();